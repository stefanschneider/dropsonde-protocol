// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CloudFoundry.Dropsonde.Events {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Log {

    #region Descriptor
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Log() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cglsb2cucHJvdG8SBmV2ZW50cyLbAQoKTG9nTWVzc2FnZRIPCgdtZXNzYWdl", 
            "GAEgASgMEjQKDG1lc3NhZ2VfdHlwZRgCIAEoDjIeLmV2ZW50cy5Mb2dNZXNz", 
            "YWdlLk1lc3NhZ2VUeXBlEhEKCXRpbWVzdGFtcBgDIAEoAxIOCgZhcHBfaWQY", 
            "BCABKAkSEwoLc291cmNlX3R5cGUYBSABKAkSFwoPc291cmNlX2luc3RhbmNl", 
            "GAYgASgJIjUKC01lc3NhZ2VUeXBlEhQKEE5PTkVfTUVTU0FHRVRZUEUQABIH", 
            "CgNPVVQQARIHCgNFUlIQAkJPCiFvcmcuY2xvdWRmb3VuZHJ5LmRyb3Bzb25k", 
            "ZS5ldmVudHNCCkxvZ0ZhY3RvcnmqAh1DbG91ZEZvdW5kcnkuRHJvcHNvbmRl", 
            "LkV2ZW50c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::CloudFoundry.Dropsonde.Events.LogMessage), new[]{ "Message", "MessageType", "Timestamp", "AppId", "SourceType", "SourceInstance" }, null, new[]{ typeof(global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LogMessage : pb::IMessage<LogMessage> {
    private static readonly pb::MessageParser<LogMessage> _parser = new pb::MessageParser<LogMessage>(() => new LogMessage());
    public static pb::MessageParser<LogMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::CloudFoundry.Dropsonde.Events.Log.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public LogMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public LogMessage(LogMessage other) : this() {
      message_ = other.message_;
      messageType_ = other.messageType_;
      timestamp_ = other.timestamp_;
      appId_ = other.appId_;
      sourceType_ = other.sourceType_;
      sourceInstance_ = other.sourceInstance_;
    }

    public LogMessage Clone() {
      return new LogMessage(this);
    }

    public const int MessageFieldNumber = 1;
    private pb::ByteString message_ = pb::ByteString.Empty;
    public pb::ByteString Message {
      get { return message_; }
      set {
        message_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int MessageTypeFieldNumber = 2;
    private global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType messageType_ = global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType.NONE_MESSAGETYPE;
    public global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public const int AppIdFieldNumber = 4;
    private string appId_ = "";
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int SourceTypeFieldNumber = 5;
    private string sourceType_ = "";
    public string SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int SourceInstanceFieldNumber = 6;
    private string sourceInstance_ = "";
    public string SourceInstance {
      get { return sourceInstance_; }
      set {
        sourceInstance_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as LogMessage);
    }

    public bool Equals(LogMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (MessageType != other.MessageType) return false;
      if (Timestamp != other.Timestamp) return false;
      if (AppId != other.AppId) return false;
      if (SourceType != other.SourceType) return false;
      if (SourceInstance != other.SourceInstance) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (MessageType != global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType.NONE_MESSAGETYPE) hash ^= MessageType.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (SourceType.Length != 0) hash ^= SourceType.GetHashCode();
      if (SourceInstance.Length != 0) hash ^= SourceInstance.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Message);
      }
      if (MessageType != global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType.NONE_MESSAGETYPE) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MessageType);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AppId);
      }
      if (SourceType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SourceType);
      }
      if (SourceInstance.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SourceInstance);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (MessageType != global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType.NONE_MESSAGETYPE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (SourceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceType);
      }
      if (SourceInstance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceInstance);
      }
      return size;
    }

    public void MergeFrom(LogMessage other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.MessageType != global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType.NONE_MESSAGETYPE) {
        MessageType = other.MessageType;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.SourceType.Length != 0) {
        SourceType = other.SourceType;
      }
      if (other.SourceInstance.Length != 0) {
        SourceInstance = other.SourceInstance;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Message = input.ReadBytes();
            break;
          }
          case 16: {
            messageType_ = (global::CloudFoundry.Dropsonde.Events.LogMessage.Types.MessageType) input.ReadEnum();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            AppId = input.ReadString();
            break;
          }
          case 42: {
            SourceType = input.ReadString();
            break;
          }
          case 50: {
            SourceInstance = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum MessageType {
        NONE_MESSAGETYPE = 0,
        OUT = 1,
        ERR = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
