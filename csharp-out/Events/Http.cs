// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CloudFoundry.Dropsonde.Events {

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Http {

    #region Descriptor
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Http() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpodHRwLnByb3RvEgZldmVudHMaCnV1aWQucHJvdG8isQIKCUh0dHBTdGFy", 
            "dBIRCgl0aW1lc3RhbXAYASABKAMSHwoJcmVxdWVzdElkGAIgASgLMgwuZXZl", 
            "bnRzLlVVSUQSIgoIcGVlclR5cGUYAyABKA4yEC5ldmVudHMuUGVlclR5cGUS", 
            "HgoGbWV0aG9kGAQgASgOMg4uZXZlbnRzLk1ldGhvZBILCgN1cmkYBSABKAkS", 
            "FQoNcmVtb3RlQWRkcmVzcxgGIAEoCRIRCgl1c2VyQWdlbnQYByABKAkSJQoP", 
            "cGFyZW50UmVxdWVzdElkGAggASgLMgwuZXZlbnRzLlVVSUQSIwoNYXBwbGlj", 
            "YXRpb25JZBgJIAEoCzIMLmV2ZW50cy5VVUlEEhUKDWluc3RhbmNlSW5kZXgY", 
            "CiABKAUSEgoKaW5zdGFuY2VJZBgLIAEoCSK/AQoISHR0cFN0b3ASEQoJdGlt", 
            "ZXN0YW1wGAEgASgDEgsKA3VyaRgCIAEoCRIfCglyZXF1ZXN0SWQYAyABKAsy", 
            "DC5ldmVudHMuVVVJRBIiCghwZWVyVHlwZRgEIAEoDjIQLmV2ZW50cy5QZWVy", 
            "VHlwZRISCgpzdGF0dXNDb2RlGAUgASgFEhUKDWNvbnRlbnRMZW5ndGgYBiAB", 
            "KAMSIwoNYXBwbGljYXRpb25JZBgHIAEoCzIMLmV2ZW50cy5VVUlEIvwCCg1I", 
            "dHRwU3RhcnRTdG9wEhYKDnN0YXJ0VGltZXN0YW1wGAEgASgDEhUKDXN0b3BU", 
            "aW1lc3RhbXAYAiABKAMSHwoJcmVxdWVzdElkGAMgASgLMgwuZXZlbnRzLlVV", 
            "SUQSIgoIcGVlclR5cGUYBCABKA4yEC5ldmVudHMuUGVlclR5cGUSHgoGbWV0", 
            "aG9kGAUgASgOMg4uZXZlbnRzLk1ldGhvZBILCgN1cmkYBiABKAkSFQoNcmVt", 
            "b3RlQWRkcmVzcxgHIAEoCRIRCgl1c2VyQWdlbnQYCCABKAkSEgoKc3RhdHVz", 
            "Q29kZRgJIAEoBRIVCg1jb250ZW50TGVuZ3RoGAogASgDEiUKD3BhcmVudFJl", 
            "cXVlc3RJZBgLIAEoCzIMLmV2ZW50cy5VVUlEEiMKDWFwcGxpY2F0aW9uSWQY", 
            "DCABKAsyDC5ldmVudHMuVVVJRBIVCg1pbnN0YW5jZUluZGV4GA0gASgFEhIK", 
            "Cmluc3RhbmNlSWQYDiABKAkqNQoIUGVlclR5cGUSEQoNTk9ORV9QRUVSVFlQ", 
            "RRAAEgoKBkNsaWVudBABEgoKBlNlcnZlchACKksKBk1ldGhvZBIPCgtOT05F", 
            "X01FVEhPRBAAEgcKA0dFVBABEggKBFBPU1QQAhIHCgNQVVQQAxIKCgZERUxF", 
            "VEUQBBIICgRIRUFEEAVCUAohb3JnLmNsb3VkZm91bmRyeS5kcm9wc29uZGUu", 
            "ZXZlbnRzQgtIdHRwRmFjdG9yeaoCHUNsb3VkRm91bmRyeS5Ecm9wc29uZGUu", 
            "RXZlbnRzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbr::FileDescriptor[] { global::CloudFoundry.Dropsonde.Events.Uuid.Descriptor, },
          new pbr::GeneratedCodeInfo(new[] {typeof(global::CloudFoundry.Dropsonde.Events.PeerType), typeof(global::CloudFoundry.Dropsonde.Events.Method), }, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::CloudFoundry.Dropsonde.Events.HttpStart), new[]{ "Timestamp", "RequestId", "PeerType", "Method", "Uri", "RemoteAddress", "UserAgent", "ParentRequestId", "ApplicationId", "InstanceIndex", "InstanceId" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::CloudFoundry.Dropsonde.Events.HttpStop), new[]{ "Timestamp", "Uri", "RequestId", "PeerType", "StatusCode", "ContentLength", "ApplicationId" }, null, null, null),
            new pbr::GeneratedCodeInfo(typeof(global::CloudFoundry.Dropsonde.Events.HttpStartStop), new[]{ "StartTimestamp", "StopTimestamp", "RequestId", "PeerType", "Method", "Uri", "RemoteAddress", "UserAgent", "StatusCode", "ContentLength", "ParentRequestId", "ApplicationId", "InstanceIndex", "InstanceId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PeerType {
    NONE_PEERTYPE = 0,
    Client = 1,
    Server = 2,
  }

  public enum Method {
    NONE_METHOD = 0,
    GET = 1,
    POST = 2,
    PUT = 3,
    DELETE = 4,
    HEAD = 5,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HttpStart : pb::IMessage<HttpStart> {
    private static readonly pb::MessageParser<HttpStart> _parser = new pb::MessageParser<HttpStart>(() => new HttpStart());
    public static pb::MessageParser<HttpStart> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::CloudFoundry.Dropsonde.Events.Http.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public HttpStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    public HttpStart(HttpStart other) : this() {
      timestamp_ = other.timestamp_;
      RequestId = other.requestId_ != null ? other.RequestId.Clone() : null;
      peerType_ = other.peerType_;
      method_ = other.method_;
      uri_ = other.uri_;
      remoteAddress_ = other.remoteAddress_;
      userAgent_ = other.userAgent_;
      ParentRequestId = other.parentRequestId_ != null ? other.ParentRequestId.Clone() : null;
      ApplicationId = other.applicationId_ != null ? other.ApplicationId.Clone() : null;
      instanceIndex_ = other.instanceIndex_;
      instanceId_ = other.instanceId_;
    }

    public HttpStart Clone() {
      return new HttpStart(this);
    }

    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public const int RequestIdFieldNumber = 2;
    private global::CloudFoundry.Dropsonde.Events.UUID requestId_;
    public global::CloudFoundry.Dropsonde.Events.UUID RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    public const int PeerTypeFieldNumber = 3;
    private global::CloudFoundry.Dropsonde.Events.PeerType peerType_ = global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE;
    public global::CloudFoundry.Dropsonde.Events.PeerType PeerType {
      get { return peerType_; }
      set {
        peerType_ = value;
      }
    }

    public const int MethodFieldNumber = 4;
    private global::CloudFoundry.Dropsonde.Events.Method method_ = global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD;
    public global::CloudFoundry.Dropsonde.Events.Method Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    public const int UriFieldNumber = 5;
    private string uri_ = "";
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int RemoteAddressFieldNumber = 6;
    private string remoteAddress_ = "";
    public string RemoteAddress {
      get { return remoteAddress_; }
      set {
        remoteAddress_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int UserAgentFieldNumber = 7;
    private string userAgent_ = "";
    public string UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int ParentRequestIdFieldNumber = 8;
    private global::CloudFoundry.Dropsonde.Events.UUID parentRequestId_;
    public global::CloudFoundry.Dropsonde.Events.UUID ParentRequestId {
      get { return parentRequestId_; }
      set {
        parentRequestId_ = value;
      }
    }

    public const int ApplicationIdFieldNumber = 9;
    private global::CloudFoundry.Dropsonde.Events.UUID applicationId_;
    public global::CloudFoundry.Dropsonde.Events.UUID ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    public const int InstanceIndexFieldNumber = 10;
    private int instanceIndex_;
    public int InstanceIndex {
      get { return instanceIndex_; }
      set {
        instanceIndex_ = value;
      }
    }

    public const int InstanceIdFieldNumber = 11;
    private string instanceId_ = "";
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as HttpStart);
    }

    public bool Equals(HttpStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(RequestId, other.RequestId)) return false;
      if (PeerType != other.PeerType) return false;
      if (Method != other.Method) return false;
      if (Uri != other.Uri) return false;
      if (RemoteAddress != other.RemoteAddress) return false;
      if (UserAgent != other.UserAgent) return false;
      if (!object.Equals(ParentRequestId, other.ParentRequestId)) return false;
      if (!object.Equals(ApplicationId, other.ApplicationId)) return false;
      if (InstanceIndex != other.InstanceIndex) return false;
      if (InstanceId != other.InstanceId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (requestId_ != null) hash ^= RequestId.GetHashCode();
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) hash ^= PeerType.GetHashCode();
      if (Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) hash ^= Method.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (RemoteAddress.Length != 0) hash ^= RemoteAddress.GetHashCode();
      if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
      if (parentRequestId_ != null) hash ^= ParentRequestId.GetHashCode();
      if (applicationId_ != null) hash ^= ApplicationId.GetHashCode();
      if (InstanceIndex != 0) hash ^= InstanceIndex.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (requestId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestId);
      }
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PeerType);
      }
      if (Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Method);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uri);
      }
      if (RemoteAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RemoteAddress);
      }
      if (UserAgent.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UserAgent);
      }
      if (parentRequestId_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ParentRequestId);
      }
      if (applicationId_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ApplicationId);
      }
      if (InstanceIndex != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(InstanceIndex);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(InstanceId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (requestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestId);
      }
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PeerType);
      }
      if (Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Method);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (RemoteAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteAddress);
      }
      if (UserAgent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (parentRequestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentRequestId);
      }
      if (applicationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationId);
      }
      if (InstanceIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstanceIndex);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      return size;
    }

    public void MergeFrom(HttpStart other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.requestId_ != null) {
        if (requestId_ == null) {
          requestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        RequestId.MergeFrom(other.RequestId);
      }
      if (other.PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        PeerType = other.PeerType;
      }
      if (other.Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) {
        Method = other.Method;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.RemoteAddress.Length != 0) {
        RemoteAddress = other.RemoteAddress;
      }
      if (other.UserAgent.Length != 0) {
        UserAgent = other.UserAgent;
      }
      if (other.parentRequestId_ != null) {
        if (parentRequestId_ == null) {
          parentRequestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        ParentRequestId.MergeFrom(other.ParentRequestId);
      }
      if (other.applicationId_ != null) {
        if (applicationId_ == null) {
          applicationId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        ApplicationId.MergeFrom(other.ApplicationId);
      }
      if (other.InstanceIndex != 0) {
        InstanceIndex = other.InstanceIndex;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            if (requestId_ == null) {
              requestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(requestId_);
            break;
          }
          case 24: {
            peerType_ = (global::CloudFoundry.Dropsonde.Events.PeerType) input.ReadEnum();
            break;
          }
          case 32: {
            method_ = (global::CloudFoundry.Dropsonde.Events.Method) input.ReadEnum();
            break;
          }
          case 42: {
            Uri = input.ReadString();
            break;
          }
          case 50: {
            RemoteAddress = input.ReadString();
            break;
          }
          case 58: {
            UserAgent = input.ReadString();
            break;
          }
          case 66: {
            if (parentRequestId_ == null) {
              parentRequestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(parentRequestId_);
            break;
          }
          case 74: {
            if (applicationId_ == null) {
              applicationId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(applicationId_);
            break;
          }
          case 80: {
            InstanceIndex = input.ReadInt32();
            break;
          }
          case 90: {
            InstanceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HttpStop : pb::IMessage<HttpStop> {
    private static readonly pb::MessageParser<HttpStop> _parser = new pb::MessageParser<HttpStop>(() => new HttpStop());
    public static pb::MessageParser<HttpStop> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::CloudFoundry.Dropsonde.Events.Http.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public HttpStop() {
      OnConstruction();
    }

    partial void OnConstruction();

    public HttpStop(HttpStop other) : this() {
      timestamp_ = other.timestamp_;
      uri_ = other.uri_;
      RequestId = other.requestId_ != null ? other.RequestId.Clone() : null;
      peerType_ = other.peerType_;
      statusCode_ = other.statusCode_;
      contentLength_ = other.contentLength_;
      ApplicationId = other.applicationId_ != null ? other.ApplicationId.Clone() : null;
    }

    public HttpStop Clone() {
      return new HttpStop(this);
    }

    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public const int UriFieldNumber = 2;
    private string uri_ = "";
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int RequestIdFieldNumber = 3;
    private global::CloudFoundry.Dropsonde.Events.UUID requestId_;
    public global::CloudFoundry.Dropsonde.Events.UUID RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    public const int PeerTypeFieldNumber = 4;
    private global::CloudFoundry.Dropsonde.Events.PeerType peerType_ = global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE;
    public global::CloudFoundry.Dropsonde.Events.PeerType PeerType {
      get { return peerType_; }
      set {
        peerType_ = value;
      }
    }

    public const int StatusCodeFieldNumber = 5;
    private int statusCode_;
    public int StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    public const int ContentLengthFieldNumber = 6;
    private long contentLength_;
    public long ContentLength {
      get { return contentLength_; }
      set {
        contentLength_ = value;
      }
    }

    public const int ApplicationIdFieldNumber = 7;
    private global::CloudFoundry.Dropsonde.Events.UUID applicationId_;
    public global::CloudFoundry.Dropsonde.Events.UUID ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as HttpStop);
    }

    public bool Equals(HttpStop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Uri != other.Uri) return false;
      if (!object.Equals(RequestId, other.RequestId)) return false;
      if (PeerType != other.PeerType) return false;
      if (StatusCode != other.StatusCode) return false;
      if (ContentLength != other.ContentLength) return false;
      if (!object.Equals(ApplicationId, other.ApplicationId)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (requestId_ != null) hash ^= RequestId.GetHashCode();
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) hash ^= PeerType.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (ContentLength != 0L) hash ^= ContentLength.GetHashCode();
      if (applicationId_ != null) hash ^= ApplicationId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (requestId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestId);
      }
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PeerType);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StatusCode);
      }
      if (ContentLength != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ContentLength);
      }
      if (applicationId_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ApplicationId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (requestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestId);
      }
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PeerType);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
      }
      if (ContentLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ContentLength);
      }
      if (applicationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationId);
      }
      return size;
    }

    public void MergeFrom(HttpStop other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.requestId_ != null) {
        if (requestId_ == null) {
          requestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        RequestId.MergeFrom(other.RequestId);
      }
      if (other.PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        PeerType = other.PeerType;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.ContentLength != 0L) {
        ContentLength = other.ContentLength;
      }
      if (other.applicationId_ != null) {
        if (applicationId_ == null) {
          applicationId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        ApplicationId.MergeFrom(other.ApplicationId);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 26: {
            if (requestId_ == null) {
              requestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(requestId_);
            break;
          }
          case 32: {
            peerType_ = (global::CloudFoundry.Dropsonde.Events.PeerType) input.ReadEnum();
            break;
          }
          case 40: {
            StatusCode = input.ReadInt32();
            break;
          }
          case 48: {
            ContentLength = input.ReadInt64();
            break;
          }
          case 58: {
            if (applicationId_ == null) {
              applicationId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(applicationId_);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HttpStartStop : pb::IMessage<HttpStartStop> {
    private static readonly pb::MessageParser<HttpStartStop> _parser = new pb::MessageParser<HttpStartStop>(() => new HttpStartStop());
    public static pb::MessageParser<HttpStartStop> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::CloudFoundry.Dropsonde.Events.Http.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public HttpStartStop() {
      OnConstruction();
    }

    partial void OnConstruction();

    public HttpStartStop(HttpStartStop other) : this() {
      startTimestamp_ = other.startTimestamp_;
      stopTimestamp_ = other.stopTimestamp_;
      RequestId = other.requestId_ != null ? other.RequestId.Clone() : null;
      peerType_ = other.peerType_;
      method_ = other.method_;
      uri_ = other.uri_;
      remoteAddress_ = other.remoteAddress_;
      userAgent_ = other.userAgent_;
      statusCode_ = other.statusCode_;
      contentLength_ = other.contentLength_;
      ParentRequestId = other.parentRequestId_ != null ? other.ParentRequestId.Clone() : null;
      ApplicationId = other.applicationId_ != null ? other.ApplicationId.Clone() : null;
      instanceIndex_ = other.instanceIndex_;
      instanceId_ = other.instanceId_;
    }

    public HttpStartStop Clone() {
      return new HttpStartStop(this);
    }

    public const int StartTimestampFieldNumber = 1;
    private long startTimestamp_;
    public long StartTimestamp {
      get { return startTimestamp_; }
      set {
        startTimestamp_ = value;
      }
    }

    public const int StopTimestampFieldNumber = 2;
    private long stopTimestamp_;
    public long StopTimestamp {
      get { return stopTimestamp_; }
      set {
        stopTimestamp_ = value;
      }
    }

    public const int RequestIdFieldNumber = 3;
    private global::CloudFoundry.Dropsonde.Events.UUID requestId_;
    public global::CloudFoundry.Dropsonde.Events.UUID RequestId {
      get { return requestId_; }
      set {
        requestId_ = value;
      }
    }

    public const int PeerTypeFieldNumber = 4;
    private global::CloudFoundry.Dropsonde.Events.PeerType peerType_ = global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE;
    public global::CloudFoundry.Dropsonde.Events.PeerType PeerType {
      get { return peerType_; }
      set {
        peerType_ = value;
      }
    }

    public const int MethodFieldNumber = 5;
    private global::CloudFoundry.Dropsonde.Events.Method method_ = global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD;
    public global::CloudFoundry.Dropsonde.Events.Method Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    public const int UriFieldNumber = 6;
    private string uri_ = "";
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int RemoteAddressFieldNumber = 7;
    private string remoteAddress_ = "";
    public string RemoteAddress {
      get { return remoteAddress_; }
      set {
        remoteAddress_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int UserAgentFieldNumber = 8;
    private string userAgent_ = "";
    public string UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int StatusCodeFieldNumber = 9;
    private int statusCode_;
    public int StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    public const int ContentLengthFieldNumber = 10;
    private long contentLength_;
    public long ContentLength {
      get { return contentLength_; }
      set {
        contentLength_ = value;
      }
    }

    public const int ParentRequestIdFieldNumber = 11;
    private global::CloudFoundry.Dropsonde.Events.UUID parentRequestId_;
    public global::CloudFoundry.Dropsonde.Events.UUID ParentRequestId {
      get { return parentRequestId_; }
      set {
        parentRequestId_ = value;
      }
    }

    public const int ApplicationIdFieldNumber = 12;
    private global::CloudFoundry.Dropsonde.Events.UUID applicationId_;
    public global::CloudFoundry.Dropsonde.Events.UUID ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    public const int InstanceIndexFieldNumber = 13;
    private int instanceIndex_;
    public int InstanceIndex {
      get { return instanceIndex_; }
      set {
        instanceIndex_ = value;
      }
    }

    public const int InstanceIdFieldNumber = 14;
    private string instanceId_ = "";
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as HttpStartStop);
    }

    public bool Equals(HttpStartStop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTimestamp != other.StartTimestamp) return false;
      if (StopTimestamp != other.StopTimestamp) return false;
      if (!object.Equals(RequestId, other.RequestId)) return false;
      if (PeerType != other.PeerType) return false;
      if (Method != other.Method) return false;
      if (Uri != other.Uri) return false;
      if (RemoteAddress != other.RemoteAddress) return false;
      if (UserAgent != other.UserAgent) return false;
      if (StatusCode != other.StatusCode) return false;
      if (ContentLength != other.ContentLength) return false;
      if (!object.Equals(ParentRequestId, other.ParentRequestId)) return false;
      if (!object.Equals(ApplicationId, other.ApplicationId)) return false;
      if (InstanceIndex != other.InstanceIndex) return false;
      if (InstanceId != other.InstanceId) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (StartTimestamp != 0L) hash ^= StartTimestamp.GetHashCode();
      if (StopTimestamp != 0L) hash ^= StopTimestamp.GetHashCode();
      if (requestId_ != null) hash ^= RequestId.GetHashCode();
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) hash ^= PeerType.GetHashCode();
      if (Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) hash ^= Method.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (RemoteAddress.Length != 0) hash ^= RemoteAddress.GetHashCode();
      if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
      if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
      if (ContentLength != 0L) hash ^= ContentLength.GetHashCode();
      if (parentRequestId_ != null) hash ^= ParentRequestId.GetHashCode();
      if (applicationId_ != null) hash ^= ApplicationId.GetHashCode();
      if (InstanceIndex != 0) hash ^= InstanceIndex.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (StartTimestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTimestamp);
      }
      if (StopTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StopTimestamp);
      }
      if (requestId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RequestId);
      }
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PeerType);
      }
      if (Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Method);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Uri);
      }
      if (RemoteAddress.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RemoteAddress);
      }
      if (UserAgent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UserAgent);
      }
      if (StatusCode != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StatusCode);
      }
      if (ContentLength != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ContentLength);
      }
      if (parentRequestId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ParentRequestId);
      }
      if (applicationId_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ApplicationId);
      }
      if (InstanceIndex != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(InstanceIndex);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(InstanceId);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (StartTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimestamp);
      }
      if (StopTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StopTimestamp);
      }
      if (requestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestId);
      }
      if (PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PeerType);
      }
      if (Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Method);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (RemoteAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteAddress);
      }
      if (UserAgent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (StatusCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
      }
      if (ContentLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ContentLength);
      }
      if (parentRequestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentRequestId);
      }
      if (applicationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationId);
      }
      if (InstanceIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstanceIndex);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      return size;
    }

    public void MergeFrom(HttpStartStop other) {
      if (other == null) {
        return;
      }
      if (other.StartTimestamp != 0L) {
        StartTimestamp = other.StartTimestamp;
      }
      if (other.StopTimestamp != 0L) {
        StopTimestamp = other.StopTimestamp;
      }
      if (other.requestId_ != null) {
        if (requestId_ == null) {
          requestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        RequestId.MergeFrom(other.RequestId);
      }
      if (other.PeerType != global::CloudFoundry.Dropsonde.Events.PeerType.NONE_PEERTYPE) {
        PeerType = other.PeerType;
      }
      if (other.Method != global::CloudFoundry.Dropsonde.Events.Method.NONE_METHOD) {
        Method = other.Method;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.RemoteAddress.Length != 0) {
        RemoteAddress = other.RemoteAddress;
      }
      if (other.UserAgent.Length != 0) {
        UserAgent = other.UserAgent;
      }
      if (other.StatusCode != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.ContentLength != 0L) {
        ContentLength = other.ContentLength;
      }
      if (other.parentRequestId_ != null) {
        if (parentRequestId_ == null) {
          parentRequestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        ParentRequestId.MergeFrom(other.ParentRequestId);
      }
      if (other.applicationId_ != null) {
        if (applicationId_ == null) {
          applicationId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
        }
        ApplicationId.MergeFrom(other.ApplicationId);
      }
      if (other.InstanceIndex != 0) {
        InstanceIndex = other.InstanceIndex;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StartTimestamp = input.ReadInt64();
            break;
          }
          case 16: {
            StopTimestamp = input.ReadInt64();
            break;
          }
          case 26: {
            if (requestId_ == null) {
              requestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(requestId_);
            break;
          }
          case 32: {
            peerType_ = (global::CloudFoundry.Dropsonde.Events.PeerType) input.ReadEnum();
            break;
          }
          case 40: {
            method_ = (global::CloudFoundry.Dropsonde.Events.Method) input.ReadEnum();
            break;
          }
          case 50: {
            Uri = input.ReadString();
            break;
          }
          case 58: {
            RemoteAddress = input.ReadString();
            break;
          }
          case 66: {
            UserAgent = input.ReadString();
            break;
          }
          case 72: {
            StatusCode = input.ReadInt32();
            break;
          }
          case 80: {
            ContentLength = input.ReadInt64();
            break;
          }
          case 90: {
            if (parentRequestId_ == null) {
              parentRequestId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(parentRequestId_);
            break;
          }
          case 98: {
            if (applicationId_ == null) {
              applicationId_ = new global::CloudFoundry.Dropsonde.Events.UUID();
            }
            input.ReadMessage(applicationId_);
            break;
          }
          case 104: {
            InstanceIndex = input.ReadInt32();
            break;
          }
          case 114: {
            InstanceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
