// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envelope.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CloudFoundry.Dropsonde.Events {

  namespace Proto {

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Envelope {

      #region Descriptor
      public static pbr::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbr::FileDescriptor descriptor;

      static Envelope() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "Cg5lbnZlbG9wZS5wcm90bxIGZXZlbnRzGgpodHRwLnByb3RvGglsb2cucHJv", 
              "dG8aDG1ldHJpYy5wcm90bxoLZXJyb3IucHJvdG8igwUKCEVudmVsb3BlEg4K", 
              "Bm9yaWdpbhgBIAEoCRItCglldmVudFR5cGUYAiABKA4yGi5ldmVudHMuRW52", 
              "ZWxvcGUuRXZlbnRUeXBlEhEKCXRpbWVzdGFtcBgGIAEoAxISCgpkZXBsb3lt", 
              "ZW50GA0gASgJEgsKA2pvYhgOIAEoCRINCgVpbmRleBgPIAEoCRIKCgJpcBgQ", 
              "IAEoCRIkCglodHRwU3RhcnQYBCABKAsyES5ldmVudHMuSHR0cFN0YXJ0EiIK", 
              "CGh0dHBTdG9wGAUgASgLMhAuZXZlbnRzLkh0dHBTdG9wEiwKDWh0dHBTdGFy", 
              "dFN0b3AYByABKAsyFS5ldmVudHMuSHR0cFN0YXJ0U3RvcBImCgpsb2dNZXNz", 
              "YWdlGAggASgLMhIuZXZlbnRzLkxvZ01lc3NhZ2USKAoLdmFsdWVNZXRyaWMY", 
              "CSABKAsyEy5ldmVudHMuVmFsdWVNZXRyaWMSKgoMY291bnRlckV2ZW50GAog", 
              "ASgLMhQuZXZlbnRzLkNvdW50ZXJFdmVudBIcCgVlcnJvchgLIAEoCzINLmV2", 
              "ZW50cy5FcnJvchIwCg9jb250YWluZXJNZXRyaWMYDCABKAsyFy5ldmVudHMu", 
              "Q29udGFpbmVyTWV0cmljIqIBCglFdmVudFR5cGUSEgoOTk9ORV9FVkVOVFRZ", 
              "UEUQABINCglIdHRwU3RhcnQQAhIMCghIdHRwU3RvcBADEhEKDUh0dHBTdGFy", 
              "dFN0b3AQBBIOCgpMb2dNZXNzYWdlEAUSDwoLVmFsdWVNZXRyaWMQBhIQCgxD", 
              "b3VudGVyRXZlbnQQBxIJCgVFcnJvchAIEhMKD0NvbnRhaW5lck1ldHJpYxAJ", 
              "QlEKIW9yZy5jbG91ZGZvdW5kcnkuZHJvcHNvbmRlLmV2ZW50c0IMRXZlbnRG", 
              "YWN0b3J5qgIdQ2xvdWRGb3VuZHJ5LkRyb3Bzb25kZS5FdmVudHNiBnByb3Rv", 
              "Mw=="));
        descriptor = pbr::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbr::FileDescriptor[] { global::CloudFoundry.Dropsonde.Events.Http.Descriptor, global::CloudFoundry.Dropsonde.Events.Log.Descriptor, global::CloudFoundry.Dropsonde.Events.Metric.Descriptor, global::CloudFoundry.Dropsonde.Events.Proto.Error.Descriptor, },
            new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
              new pbr::GeneratedCodeInfo(typeof(global::CloudFoundry.Dropsonde.Events.Envelope), new[]{ "Origin", "EventType", "Timestamp", "Deployment", "Job", "Index", "Ip", "HttpStart", "HttpStop", "HttpStartStop", "LogMessage", "ValueMetric", "CounterEvent", "Error", "ContainerMetric" }, null, new[]{ typeof(global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType) }, null)
            }));
      }
      #endregion

    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Envelope : pb::IMessage<Envelope> {
    private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
    public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::CloudFoundry.Dropsonde.Events.Proto.Envelope.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Envelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Envelope(Envelope other) : this() {
      origin_ = other.origin_;
      eventType_ = other.eventType_;
      timestamp_ = other.timestamp_;
      deployment_ = other.deployment_;
      job_ = other.job_;
      index_ = other.index_;
      ip_ = other.ip_;
      HttpStart = other.httpStart_ != null ? other.HttpStart.Clone() : null;
      HttpStop = other.httpStop_ != null ? other.HttpStop.Clone() : null;
      HttpStartStop = other.httpStartStop_ != null ? other.HttpStartStop.Clone() : null;
      LogMessage = other.logMessage_ != null ? other.LogMessage.Clone() : null;
      ValueMetric = other.valueMetric_ != null ? other.ValueMetric.Clone() : null;
      CounterEvent = other.counterEvent_ != null ? other.CounterEvent.Clone() : null;
      Error = other.error_ != null ? other.Error.Clone() : null;
      ContainerMetric = other.containerMetric_ != null ? other.ContainerMetric.Clone() : null;
    }

    public Envelope Clone() {
      return new Envelope(this);
    }

    public const int OriginFieldNumber = 1;
    private string origin_ = "";
    public string Origin {
      get { return origin_; }
      set {
        origin_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int EventTypeFieldNumber = 2;
    private global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType eventType_ = global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType.NONE_EVENTTYPE;
    public global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    public const int TimestampFieldNumber = 6;
    private long timestamp_;
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    public const int DeploymentFieldNumber = 13;
    private string deployment_ = "";
    public string Deployment {
      get { return deployment_; }
      set {
        deployment_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int JobFieldNumber = 14;
    private string job_ = "";
    public string Job {
      get { return job_; }
      set {
        job_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int IndexFieldNumber = 15;
    private string index_ = "";
    public string Index {
      get { return index_; }
      set {
        index_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int IpFieldNumber = 16;
    private string ip_ = "";
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public const int HttpStartFieldNumber = 4;
    private global::CloudFoundry.Dropsonde.Events.HttpStart httpStart_;
    public global::CloudFoundry.Dropsonde.Events.HttpStart HttpStart {
      get { return httpStart_; }
      set {
        httpStart_ = value;
      }
    }

    public const int HttpStopFieldNumber = 5;
    private global::CloudFoundry.Dropsonde.Events.HttpStop httpStop_;
    public global::CloudFoundry.Dropsonde.Events.HttpStop HttpStop {
      get { return httpStop_; }
      set {
        httpStop_ = value;
      }
    }

    public const int HttpStartStopFieldNumber = 7;
    private global::CloudFoundry.Dropsonde.Events.HttpStartStop httpStartStop_;
    public global::CloudFoundry.Dropsonde.Events.HttpStartStop HttpStartStop {
      get { return httpStartStop_; }
      set {
        httpStartStop_ = value;
      }
    }

    public const int LogMessageFieldNumber = 8;
    private global::CloudFoundry.Dropsonde.Events.LogMessage logMessage_;
    public global::CloudFoundry.Dropsonde.Events.LogMessage LogMessage {
      get { return logMessage_; }
      set {
        logMessage_ = value;
      }
    }

    public const int ValueMetricFieldNumber = 9;
    private global::CloudFoundry.Dropsonde.Events.ValueMetric valueMetric_;
    public global::CloudFoundry.Dropsonde.Events.ValueMetric ValueMetric {
      get { return valueMetric_; }
      set {
        valueMetric_ = value;
      }
    }

    public const int CounterEventFieldNumber = 10;
    private global::CloudFoundry.Dropsonde.Events.CounterEvent counterEvent_;
    public global::CloudFoundry.Dropsonde.Events.CounterEvent CounterEvent {
      get { return counterEvent_; }
      set {
        counterEvent_ = value;
      }
    }

    public const int ErrorFieldNumber = 11;
    private global::CloudFoundry.Dropsonde.Events.Error error_;
    public global::CloudFoundry.Dropsonde.Events.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    public const int ContainerMetricFieldNumber = 12;
    private global::CloudFoundry.Dropsonde.Events.ContainerMetric containerMetric_;
    public global::CloudFoundry.Dropsonde.Events.ContainerMetric ContainerMetric {
      get { return containerMetric_; }
      set {
        containerMetric_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as Envelope);
    }

    public bool Equals(Envelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Origin != other.Origin) return false;
      if (EventType != other.EventType) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Deployment != other.Deployment) return false;
      if (Job != other.Job) return false;
      if (Index != other.Index) return false;
      if (Ip != other.Ip) return false;
      if (!object.Equals(HttpStart, other.HttpStart)) return false;
      if (!object.Equals(HttpStop, other.HttpStop)) return false;
      if (!object.Equals(HttpStartStop, other.HttpStartStop)) return false;
      if (!object.Equals(LogMessage, other.LogMessage)) return false;
      if (!object.Equals(ValueMetric, other.ValueMetric)) return false;
      if (!object.Equals(CounterEvent, other.CounterEvent)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(ContainerMetric, other.ContainerMetric)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Origin.Length != 0) hash ^= Origin.GetHashCode();
      if (EventType != global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType.NONE_EVENTTYPE) hash ^= EventType.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Deployment.Length != 0) hash ^= Deployment.GetHashCode();
      if (Job.Length != 0) hash ^= Job.GetHashCode();
      if (Index.Length != 0) hash ^= Index.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (httpStart_ != null) hash ^= HttpStart.GetHashCode();
      if (httpStop_ != null) hash ^= HttpStop.GetHashCode();
      if (httpStartStop_ != null) hash ^= HttpStartStop.GetHashCode();
      if (logMessage_ != null) hash ^= LogMessage.GetHashCode();
      if (valueMetric_ != null) hash ^= ValueMetric.GetHashCode();
      if (counterEvent_ != null) hash ^= CounterEvent.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (containerMetric_ != null) hash ^= ContainerMetric.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.Default.Format(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Origin.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Origin);
      }
      if (EventType != global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType.NONE_EVENTTYPE) {
        output.WriteRawTag(16);
        output.WriteEnum((int) EventType);
      }
      if (httpStart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(HttpStart);
      }
      if (httpStop_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(HttpStop);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Timestamp);
      }
      if (httpStartStop_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(HttpStartStop);
      }
      if (logMessage_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LogMessage);
      }
      if (valueMetric_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ValueMetric);
      }
      if (counterEvent_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CounterEvent);
      }
      if (error_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Error);
      }
      if (containerMetric_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ContainerMetric);
      }
      if (Deployment.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Deployment);
      }
      if (Job.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Job);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Index);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Ip);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Origin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Origin);
      }
      if (EventType != global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType.NONE_EVENTTYPE) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Deployment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deployment);
      }
      if (Job.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Job);
      }
      if (Index.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      if (Ip.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (httpStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpStart);
      }
      if (httpStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpStop);
      }
      if (httpStartStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpStartStop);
      }
      if (logMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogMessage);
      }
      if (valueMetric_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueMetric);
      }
      if (counterEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CounterEvent);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (containerMetric_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerMetric);
      }
      return size;
    }

    public void MergeFrom(Envelope other) {
      if (other == null) {
        return;
      }
      if (other.Origin.Length != 0) {
        Origin = other.Origin;
      }
      if (other.EventType != global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType.NONE_EVENTTYPE) {
        EventType = other.EventType;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Deployment.Length != 0) {
        Deployment = other.Deployment;
      }
      if (other.Job.Length != 0) {
        Job = other.Job;
      }
      if (other.Index.Length != 0) {
        Index = other.Index;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.httpStart_ != null) {
        if (httpStart_ == null) {
          httpStart_ = new global::CloudFoundry.Dropsonde.Events.HttpStart();
        }
        HttpStart.MergeFrom(other.HttpStart);
      }
      if (other.httpStop_ != null) {
        if (httpStop_ == null) {
          httpStop_ = new global::CloudFoundry.Dropsonde.Events.HttpStop();
        }
        HttpStop.MergeFrom(other.HttpStop);
      }
      if (other.httpStartStop_ != null) {
        if (httpStartStop_ == null) {
          httpStartStop_ = new global::CloudFoundry.Dropsonde.Events.HttpStartStop();
        }
        HttpStartStop.MergeFrom(other.HttpStartStop);
      }
      if (other.logMessage_ != null) {
        if (logMessage_ == null) {
          logMessage_ = new global::CloudFoundry.Dropsonde.Events.LogMessage();
        }
        LogMessage.MergeFrom(other.LogMessage);
      }
      if (other.valueMetric_ != null) {
        if (valueMetric_ == null) {
          valueMetric_ = new global::CloudFoundry.Dropsonde.Events.ValueMetric();
        }
        ValueMetric.MergeFrom(other.ValueMetric);
      }
      if (other.counterEvent_ != null) {
        if (counterEvent_ == null) {
          counterEvent_ = new global::CloudFoundry.Dropsonde.Events.CounterEvent();
        }
        CounterEvent.MergeFrom(other.CounterEvent);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          error_ = new global::CloudFoundry.Dropsonde.Events.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.containerMetric_ != null) {
        if (containerMetric_ == null) {
          containerMetric_ = new global::CloudFoundry.Dropsonde.Events.ContainerMetric();
        }
        ContainerMetric.MergeFrom(other.ContainerMetric);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Origin = input.ReadString();
            break;
          }
          case 16: {
            eventType_ = (global::CloudFoundry.Dropsonde.Events.Envelope.Types.EventType) input.ReadEnum();
            break;
          }
          case 34: {
            if (httpStart_ == null) {
              httpStart_ = new global::CloudFoundry.Dropsonde.Events.HttpStart();
            }
            input.ReadMessage(httpStart_);
            break;
          }
          case 42: {
            if (httpStop_ == null) {
              httpStop_ = new global::CloudFoundry.Dropsonde.Events.HttpStop();
            }
            input.ReadMessage(httpStop_);
            break;
          }
          case 48: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 58: {
            if (httpStartStop_ == null) {
              httpStartStop_ = new global::CloudFoundry.Dropsonde.Events.HttpStartStop();
            }
            input.ReadMessage(httpStartStop_);
            break;
          }
          case 66: {
            if (logMessage_ == null) {
              logMessage_ = new global::CloudFoundry.Dropsonde.Events.LogMessage();
            }
            input.ReadMessage(logMessage_);
            break;
          }
          case 74: {
            if (valueMetric_ == null) {
              valueMetric_ = new global::CloudFoundry.Dropsonde.Events.ValueMetric();
            }
            input.ReadMessage(valueMetric_);
            break;
          }
          case 82: {
            if (counterEvent_ == null) {
              counterEvent_ = new global::CloudFoundry.Dropsonde.Events.CounterEvent();
            }
            input.ReadMessage(counterEvent_);
            break;
          }
          case 90: {
            if (error_ == null) {
              error_ = new global::CloudFoundry.Dropsonde.Events.Error();
            }
            input.ReadMessage(error_);
            break;
          }
          case 98: {
            if (containerMetric_ == null) {
              containerMetric_ = new global::CloudFoundry.Dropsonde.Events.ContainerMetric();
            }
            input.ReadMessage(containerMetric_);
            break;
          }
          case 106: {
            Deployment = input.ReadString();
            break;
          }
          case 114: {
            Job = input.ReadString();
            break;
          }
          case 122: {
            Index = input.ReadString();
            break;
          }
          case 130: {
            Ip = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum EventType {
        NONE_EVENTTYPE = 0,
        HttpStart = 2,
        HttpStop = 3,
        HttpStartStop = 4,
        LogMessage = 5,
        ValueMetric = 6,
        CounterEvent = 7,
        Error = 8,
        ContainerMetric = 9,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
